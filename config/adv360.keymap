#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

&mt {
    quick-tap-ms = <400>;
    require-prior-idle-ms = <125>;
};

&lt {
    quick-tap-ms = <400>;
    require-prior-idle-ms = <125>;
};

#define POS_UP 71
#define POS_DOWN 72
#define POS_ENTER 69

#define POS_LEFT 63
#define POS_RIGHT 64
#define POS_J_SHIFT 41
#define POS_K_OPTION 42
#define POS_BSPC 65
#define POS_DEL 66

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };

      hm_l: homerow_mods_left {
          compatible = "zmk,behavior-hold-tap";
          #binding-cells = <2>;
          bindings = <&kp>, <&kp>;

          flavor = "hold-preferred";
          tapping-term-ms = <300>;
          quick-tap-ms = <175>;                // repeat on tap-into-hold
          require-prior-idle-ms = <200>;

          hold-trigger-key-positions = <POS_UP POS_DOWN POS_ENTER>;
          // hold-trigger-on-release;
      };

      hm_r: homerow_mods_right {
          compatible = "zmk,behavior-hold-tap";
          #binding-cells = <2>;
          bindings = <&kp>, <&kp>;

          flavor = "hold-preferred";
          tapping-term-ms = <300>;
          quick-tap-ms = <175>;
          require-prior-idle-ms = <200>;

          hold-trigger-key-positions = <POS_LEFT POS_RIGHT POS_J_SHIFT POS_K_OPTION POS_BSPC POS_DEL>;
          // hold-trigger-on-release;
      };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp PLUS       &kp EXCL   &kp AT    &kp HASH      &kp DLLR       &kp PRCNT  &mo 1                                                                             &mo 2      &kp CARET  &kp AMPS       &kp STAR      &kp LPAR  &kp RPAR   &kp BSLH
&kp TAB        &kp Q      &kp W     &kp E         &kp R          &kp T      &kp TILDE                                                                         &kp PIPE   &kp Y      &kp U          &kp I         &kp O     &kp P      &kp DQT
&mt LCTRL ESC  &kp A      &kp S     &hm_r LALT D  &hm_l LSHFT F  &kp G      &kp LSHFT              &kp LGUI   &sk LALT    &kp LGUI      &kp LALT              &kp LSHFT  &kp H      &hm_r RSHFT J  &hm_r LALT K  &kp L     &kp COLON  &kp SQT
&kp EQUAL      &kp Z      &kp X     &kp C         &kp V          &kp B                                        &kp F13     &kp F14                                        &kp N      &kp M          &kp COMMA     &kp DOT   &kp QMARK  &kp FSLH
&kp MINUS      &kp GRAVE  &kp SEMI  &kp LEFT      &kp RIGHT                            &lt 1 BSPC  &kp DEL    &caps_word  &kp LA(BSPC)  &kp ENTER  &kp SPACE                        &kp UP         &kp DOWN      &kp LBKT  &kp RBKT   &kp UNDER
            >;
        };

        layer_keypad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                &trans  &trans  &trans     &trans      &trans           &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                &trans  &trans  &kp KP_N7  &kp KP_N8   &kp KP_N9        &kp KP_MINUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans        &trans  &trans  &kp KP_N4  &kp KP_N5   &kp KP_N6        &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans                          &trans  &trans                        &trans  &kp KP_N1  &kp KP_N2   &kp KP_N3        &trans         &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans                &kp KP_N0  &kp KP_DOT  &kp KP_MULTIPLY  &kp KP_PLUS    &trans
            >;
        };

        layer_mod {
            bindings = <
&none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                                    &trans                 &none        &none        &none        &none &none &none
&none &none        &none        &none        &none        &none        &bootloader                                                                              &bootloader            &none        &none        &none        &none &none &none
&none &none        &none        &none        &none        &none        &none                   &bt BT_CLR &bt BT_CLR &bt BT_CLR &bt BT_CLR                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &none
&none &none        &none        &none        &macro_ver   &none                                           &none      &none                                                             &none        &none        &none        &none &none &none
&none &none        &none        &none        &none                                       &none &none      &none      &none      &bl BL_TOG &rgb_ug RGB_TOG                                          &bl BL_INC   &bl BL_DEC   &none &none &none
            >;
        };

    };
};
